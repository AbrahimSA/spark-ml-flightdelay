{"paragraphs":[{"title":"Import needed packages","text":"import org.apache.spark._\n\nimport org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.Dataset\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.classification.DecisionTreeClassifier\nimport org.apache.spark.ml.feature.StringIndexer\nimport org.apache.spark.ml.feature.OneHotEncoder\nimport org.apache.spark.ml.feature.VectorIndexer;\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.feature.Bucketizer\nimport org.apache.spark.ml.feature.Binarizer\nimport org.apache.spark.ml.feature.PCA\n\nimport org.apache.spark.ml.classification.DecisionTreeClassifier\nimport org.apache.spark.ml.classification.DecisionTreeClassificationModel\nimport org.apache.spark.mllib.evaluation.BinaryClassificationMetrics\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\nimport org.apache.spark.ml.feature.StringIndexer\nimport org.apache.spark.ml.tuning.ParamGridBuilder\nimport org.apache.spark.ml.tuning.CrossValidator\nimport org.apache.spark.ml.feature.VectorAssembler","user":"anonymous","dateUpdated":"2017-11-22T18:02:31-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark._\n\nimport org.apache.spark.sql.SparkSession\n\nimport org.apache.spark.sql.functions._\n\nimport org.apache.spark.sql.types._\n\nimport org.apache.spark.sql._\n\nimport org.apache.spark.sql.Dataset\n\nimport org.apache.spark.ml.Pipeline\n\nimport org.apache.spark.ml.classification.DecisionTreeClassifier\n\nimport org.apache.spark.ml.feature.StringIndexer\n\nimport org.apache.spark.ml.feature.OneHotEncoder\n\nimport org.apache.spark.ml.feature.VectorIndexer\n\nimport org.apache.spark.ml.feature.VectorAssembler\n\nimport org.apache.spark.ml.feature.Bucketizer\n\nimport org.apache.spark.ml.feature.Binarizer\n\nimport org.apache.spark.ml.feature.PCA\n\nimport org.apache.spark.ml.classification.DecisionTreeClassifier\n\nimport org.apache.spark.ml.classification.DecisionTreeClassificationModel\n\nimport org.apache.spark.mllib.evaluation.BinaryClassificationMetrics\n\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\n\nimport org.apache.spark.ml.feature.StringIndexer\n\nimport org.apache.spark.ml.tuning.ParamGridBuilder\n\nimport org.apache.spark.ml.tuning.CrossValidator\n\nimport org.apache.spark.ml.feature.VectorAssembler\n"}]},"apps":[],"jobName":"paragraph_1511373065143_783206203","id":"20170508-144514_403247535","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T18:02:32-0800","dateFinished":"2017-11-22T18:03:27-0800","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:19808"},{"text":"%md \nFor this tutorial, we'll be using the Orange Telecoms Churn Dataset. It consists of cleaned customer activity data (features), along with a churn label specifying whether the customer canceled their subscription or not. The input  csv file has the following format: \nKS,128,415,No,Yes,25,265.1,110,45.07,197.4,99,16.78,244.7,91,11.01,10.0,3,2.7,1,False\n\nWe use a Scala case class and Structype to define the schema, corresponding to a line in the csv data file.","dateUpdated":"2017-11-22T09:51:05-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>For this tutorial, we&rsquo;ll be using the Orange Telecoms Churn Dataset. It consists of cleaned customer activity data (features), along with a churn label specifying whether the customer canceled their subscription or not. The input csv file has the following format:<br/>KS,128,415,No,Yes,25,265.1,110,45.07,197.4,99,16.78,244.7,91,11.01,10.0,3,2.7,1,False</p>\n<p>We use a Scala case class and Structype to define the schema, corresponding to a line in the csv data file.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511373065147_781667207","id":"20170530-122945_1594214131","dateCreated":"2017-11-22T09:51:05-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:19809"},{"text":"","dateUpdated":"2017-11-22T09:51:05-0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511373065148_779743463","id":"20170523-161130_2119104935","dateCreated":"2017-11-22T09:51:05-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:19810"},{"title":"Define Schema for JSON file data","text":"\ncase class Flight(dofM: Integer, dofW: Integer,fldate: String, carrier: String, flnum:String, origin: String, dest: String,  crsdephour: Integer, crsdeptime: Integer, depdelay: Double, crsarrtime: Integer, arrdelay: Double, crselapsedtime: Double, dist: Double)\n\n  val schema = StructType(Array(\n    StructField(\"dofM\", IntegerType, true),\n    StructField(\"dofW\", IntegerType, true),\n     StructField(\"fldate\", StringType, true),\n    StructField(\"carrier\", StringType, true),\n    StructField(\"flnum\", StringType, true),\n    StructField(\"origin\", StringType, true),\n    StructField(\"dest\", StringType, true),\n     StructField(\"crsdephour\", IntegerType, true),\n    StructField(\"crsdeptime\", IntegerType, true),\n    StructField(\"depdelay\", DoubleType, true),\n    StructField(\"crsarrtime\", IntegerType, true),\n    StructField(\"arrdelay\", DoubleType, true),\n    StructField(\"crselapsedtime\", DoubleType, true),\n    StructField(\"dist\", DoubleType, true)\n  ))\n","user":"anonymous","dateUpdated":"2017-11-22T18:02:46-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndefined class Flight\n\nschema: org.apache.spark.sql.types.StructType = StructType(StructField(dofM,IntegerType,true), StructField(dofW,IntegerType,true), StructField(fldate,StringType,true), StructField(carrier,StringType,true), StructField(flnum,StringType,true), StructField(origin,StringType,true), StructField(dest,StringType,true), StructField(crsdephour,IntegerType,true), StructField(crsdeptime,IntegerType,true), StructField(depdelay,DoubleType,true), StructField(crsarrtime,IntegerType,true), StructField(arrdelay,DoubleType,true), StructField(crselapsedtime,DoubleType,true), StructField(dist,DoubleType,true))\n"}]},"apps":[],"jobName":"paragraph_1511373065151_780128212","id":"20170508-150032_326029627","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T18:02:47-0800","dateFinished":"2017-11-22T18:03:32-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19811"},{"title":"Read the data from CSV file into a Dataset of Account type","text":"import spark.implicits._\nval df = spark.read.option(\"inferSchema\", \"false\").schema(schema).json(\"/user/user01/data/flightsjan2017.json\").as[Flight]\n\ndf.first()\ndf.count()\ndf.cache()\n","user":"anonymous","dateUpdated":"2017-11-22T18:03:14-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport spark.implicits._\n\ndf: org.apache.spark.sql.Dataset[Flight] = [dofM: int, dofW: int ... 12 more fields]\n\nres5: Flight = Flight(1,7,2017-01-01,AA,1678,ATL,LGA,17,1700,0.0,1912,0.0,132.0,762.0)\n\nres6: Long = 21664\n\nres7: df.type = [dofM: int, dofW: int ... 12 more fields]\n"}]},"apps":[],"jobName":"paragraph_1511373065152_765892502","id":"20170508-150131_378637203","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T18:03:27-0800","dateFinished":"2017-11-22T18:03:48-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19812"},{"text":"val test = spark.read.option(\"inferSchema\", \"false\").schema(schema).json(\"/user/user01/data/flightsfeb2017.json\").as[Flight]\ntest.count()      \ntest.first()\ntest.show()\n    ","user":"anonymous","dateUpdated":"2017-11-22T18:11:46-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ntest: org.apache.spark.sql.Dataset[Flight] = [dofM: int, dofW: int ... 12 more fields]\n\nres16: Long = 19684\n\nres17: Flight = Flight(1,3,2017-02-01,WN,1421,ATL,BOS,9,930,0.0,1155,0.0,145.0,946.0)\n+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+\n|dofM|dofW|    fldate|carrier|flnum|origin|dest|crsdephour|crsdeptime|depdelay|crsarrtime|arrdelay|crselapsedtime|  dist|\n+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+\n|   1|   3|2017-02-01|     WN| 1421|   ATL| BOS|         9|       930|     0.0|      1155|     0.0|         145.0| 946.0|\n|   1|   3|2017-02-01|     WN| 4079|   ATL| BOS|        19|      1935|    20.0|      2215|     0.0|         160.0| 946.0|\n|   1|   3|2017-02-01|     WN| 4166|   ATL| BOS|        12|      1235|     0.0|      1505|     0.0|         150.0| 946.0|\n|   1|   3|2017-02-01|     WN|  139|   ATL| DEN|        10|      1035|     0.0|      1200|     0.0|         205.0|1199.0|\n|   1|   3|2017-02-01|     WN|  596|   ATL| DEN|        13|      1330|     0.0|      1450|     3.0|         200.0|1199.0|\n|   1|   3|2017-02-01|     WN| 1613|   ATL| DEN|         6|       610|     0.0|       735|     0.0|         205.0|1199.0|\n|   1|   3|2017-02-01|     WN| 4491|   ATL| DEN|        16|      1635|     0.0|      1800|     0.0|         205.0|1199.0|\n|   1|   3|2017-02-01|     WN|  302|   ATL| LGA|        17|      1735|     0.0|      1940|     0.0|         125.0| 762.0|\n|   1|   3|2017-02-01|     WN|  446|   ATL| LGA|         8|       835|     0.0|      1050|     0.0|         135.0| 762.0|\n|   1|   3|2017-02-01|     WN| 1144|   ATL| LGA|        13|      1250|     0.0|      1455|     0.0|         125.0| 762.0|\n|   1|   3|2017-02-01|     WN| 1437|   ATL| LGA|        21|      2055|     0.0|      2310|     0.0|         135.0| 762.0|\n|   1|   3|2017-02-01|     WN| 1602|   ATL| LGA|         6|       555|     0.0|       800|     0.0|         125.0| 762.0|\n|   1|   3|2017-02-01|     WN|  285|   BOS| ATL|        14|      1350|     0.0|      1650|     0.0|         180.0| 946.0|\n|   1|   3|2017-02-01|     WN|  331|   BOS| ATL|         9|       905|     0.0|      1210|     0.0|         185.0| 946.0|\n|   1|   3|2017-02-01|     WN|  335|   BOS| ATL|         6|       625|     0.0|       935|     3.0|         190.0| 946.0|\n|   1|   3|2017-02-01|     WN| 1832|   BOS| DEN|        17|      1745|     0.0|      2035|    49.0|         290.0|1754.0|\n|   1|   3|2017-02-01|     WN|  145|   DEN| ATL|         6|       630|     0.0|      1120|     0.0|         170.0|1199.0|\n|   1|   3|2017-02-01|     WN|  547|   DEN| ATL|        17|      1740|    34.0|      2225|    54.0|         165.0|1199.0|\n|   1|   3|2017-02-01|     WN|  559|   DEN| ATL|        10|      1005|     0.0|      1455|    22.0|         170.0|1199.0|\n|   1|   3|2017-02-01|     WN|  754|   DEN| BOS|        10|      1005|     9.0|      1555|    13.0|         230.0|1754.0|\n+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1511373065153_765507753","id":"20170508-150324_497571301","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T18:11:46-0800","dateFinished":"2017-11-22T18:11:51-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19813"},{"title":"Register Dataset as a Table , display first 20 rows ","text":"df.createOrReplaceTempView(\"flights\")\nspark.catalog.cacheTable(\"flights\")\ndf.show","user":"anonymous","dateUpdated":"2017-11-22T18:03:19-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":true,"setting":{"stackedAreaChart":{}},"commonSetting":{},"keys":[{"name":"churn","index":19,"aggr":"sum"}],"groups":[],"values":[{"name":"len","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+\n|dofM|dofW|    fldate|carrier|flnum|origin|dest|crsdephour|crsdeptime|depdelay|crsarrtime|arrdelay|crselapsedtime|  dist|\n+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+\n|   1|   7|2017-01-01|     AA| 1678|   ATL| LGA|        17|      1700|     0.0|      1912|     0.0|         132.0| 762.0|\n|   1|   7|2017-01-01|     AA| 1678|   LGA| ATL|        13|      1343|     0.0|      1620|     0.0|         157.0| 762.0|\n|   1|   7|2017-01-01|     AA| 1690|   MIA| ATL|         9|       939|     0.0|      1137|    10.0|         118.0| 594.0|\n|   1|   7|2017-01-01|     AA| 2246|   ORD| MIA|        20|      2020|     0.0|        26|     0.0|         186.0|1197.0|\n|   1|   7|2017-01-01|     AA| 2266|   LGA| MIA|         7|       700|     0.0|      1017|     0.0|         197.0|1096.0|\n|   1|   7|2017-01-01|     AA| 2279|   ORD| DEN|        13|      1345|     0.0|      1527|     0.0|         162.0| 888.0|\n|   1|   7|2017-01-01|     AA| 2291|   DEN| MIA|        11|      1100|     0.0|      1649|     0.0|         229.0|1709.0|\n|   1|   7|2017-01-01|     AA| 2291|   MIA| DEN|         7|       720|     7.0|       949|     0.0|         269.0|1709.0|\n|   1|   7|2017-01-01|     AA| 2300|   DEN| ORD|        12|      1235|     0.0|      1600|     0.0|         145.0| 888.0|\n|   1|   7|2017-01-01|     AA| 2300|   ORD| DEN|        10|      1005|     5.0|      1145|     3.0|         160.0| 888.0|\n|   1|   7|2017-01-01|     AA| 2309|   IAH| MIA|         7|       701|     9.0|      1025|     0.0|         144.0| 964.0|\n|   1|   7|2017-01-01|     AA| 2315|   MIA| IAH|        20|      2045|    80.0|      2238|    63.0|         173.0| 964.0|\n|   1|   7|2017-01-01|     AA| 2325|   MIA| LGA|        20|      2025|     0.0|      2325|     0.0|         180.0|1096.0|\n|   1|   7|2017-01-01|     AA| 2342|   DEN| MIA|        24|      2359|    23.0|       550|     7.0|         231.0|1709.0|\n|   1|   7|2017-01-01|     AA| 2387|   ORD| BOS|        15|      1508|     0.0|      1818|     0.0|         130.0| 867.0|\n|   1|   7|2017-01-01|     AA| 2415|   MIA| LGA|        18|      1756|    85.0|      2049|    73.0|         173.0|1096.0|\n|   1|   7|2017-01-01|     AA| 2439|   MIA| ORD|        10|      1005|     4.0|      1231|     0.0|         206.0|1197.0|\n|   1|   7|2017-01-01|     AA| 2443|   MIA| DEN|        16|      1621|    43.0|      1846|    43.0|         265.0|1709.0|\n|   1|   7|2017-01-01|     DL|    8|   MIA| ATL|        19|      1900|     4.0|      2105|     0.0|         125.0| 594.0|\n|   1|   7|2017-01-01|     DL|   24|   MIA| ATL|        16|      1618|    29.0|      1823|    35.0|         125.0| 594.0|\n+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1511373065155_766277251","id":"20170508-150408_505244914","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T18:03:32-0800","dateFinished":"2017-11-22T18:03:52-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19814"},{"text":"%md\nThe describe() function performs summary statistics calculations on  numeric columns ","dateUpdated":"2017-11-22T09:51:05-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>The describe() function performs summary statistics calculations on numeric columns</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511373065156_764353507","id":"20170524-214640_973339640","dateCreated":"2017-11-22T09:51:05-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:19815"},{"title":"Perform summary statistics  on selected columns","text":"\ndf.describe(\"dist\", \"crselapsedtime\",\"depdelay\", \"arrdelay\", \"crsdephour\").show","user":"anonymous","dateUpdated":"2017-11-22T11:37:30-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+------------------+------------------+------------------+------------------+------------------+\n|summary|              dist|    crselapsedtime|          depdelay|          arrdelay|        crsdephour|\n+-------+------------------+------------------+------------------+------------------+------------------+\n|  count|             21664|             21664|             21664|             21664|             21664|\n|   mean|1114.2155649926144|186.45767171344164|16.895264032496307|16.717549852289512|12.935884416543574|\n| stddev| 568.1335096404862| 68.36460695521995| 47.87419047421921|47.738540262096734| 4.685797451282637|\n|    min|             184.0|              65.0|               0.0|               0.0|                 0|\n|    max|            2704.0|             423.0|            1185.0|            1158.0|                24|\n+-------+------------------+------------------+------------------+------------------+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1511373065158_765123005","id":"20170524-083228_1459810795","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T11:37:30-0800","dateFinished":"2017-11-22T11:37:32-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19816"},{"title":"Calculate the correlation between Total day minutes and Total day charge","text":"import org.apache.spark.mllib.stat.Statistics\nval depdelay = df.select(\"depdelay\").map{row:Row => row.getAs[Double](\"depdelay\")}.rdd\nval arrdelay = df.select( \"arrdelay\").map{row:Row => row.getAs[Double](\"arrdelay\")}.rdd\nval correlation = Statistics.corr(depdelay,arrdelay, \"pearson\")","user":"anonymous","dateUpdated":"2017-11-22T11:44:01-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.mllib.stat.Statistics\n\ndepdelay: org.apache.spark.rdd.RDD[Double] = MapPartitionsRDD[1538] at rdd at <console>:134\n\narrdelay: org.apache.spark.rdd.RDD[Double] = MapPartitionsRDD[1541] at rdd at <console>:134\n\ncorrelation: Double = 0.966593599996198\n"}]},"apps":[],"jobName":"paragraph_1511373065160_762814511","id":"20170524-093152_48310549","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T11:44:01-0800","dateFinished":"2017-11-22T11:44:05-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19817"},{"text":"%md \nuse Spark SQL to explore the dataset","dateUpdated":"2017-11-22T09:51:05-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>use Spark SQL to explore the dataset</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511373065162_763584009","id":"20170603-182655_1680505289","dateCreated":"2017-11-22T09:51:05-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:19818"},{"title":"Longest departure delay","text":"%sql select carrier,origin, dest, depdelay,crsdephour, dist\nfrom flights \norder by depdelay desc limit 20  \n","user":"anonymous","dateUpdated":"2017-11-22T11:51:39-0800","config":{"tableHide":false,"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","editorHide":false,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\torigin\tdest\tdepdelay\tcrsdephour\tdist\nDL\tBOS\tATL\t1185.0\t17\t946.0\nDL\tORD\tATL\t1087.0\t19\t606.0\nUA\tMIA\tEWR\t1072.0\t20\t1085.0\nDL\tDEN\tATL\t1034.0\t13\t1199.0\nUA\tBOS\tORD\t972.0\t18\t867.0\nDL\tDEN\tLGA\t952.0\t16\t1620.0\nUA\tMIA\tSFO\t925.0\t18\t2585.0\nDL\tBOS\tATL\t893.0\t11\t946.0\nUA\tATL\tEWR\t809.0\t20\t746.0\nUA\tMIA\tIAH\t779.0\t11\t964.0\nUA\tORD\tLGA\t756.0\t21\t733.0\nUA\tMIA\tEWR\t687.0\t8\t1085.0\nAA\tMIA\tSFO\t668.0\t21\t2585.0\nDL\tATL\tSFO\t664.0\t19\t2139.0\nUA\tEWR\tDEN\t653.0\t8\t1605.0\nUA\tATL\tSFO\t630.0\t7\t2139.0\nAA\tATL\tMIA\t592.0\t8\t594.0\nDL\tATL\tSFO\t585.0\t21\t2139.0\nUA\tSFO\tBOS\t583.0\t22\t2704.0\nDL\tATL\tLGA\t559.0\t9\t762.0\n"}]},"apps":[],"jobName":"paragraph_1511373065164_761275516","id":"20171110-195321_1924356975","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T11:51:21-0800","dateFinished":"2017-11-22T11:51:21-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19819"},{"title":"Longest Arrival delay","text":"%sql select carrier, max(arrdelay)\nfrom flights\ngroup by carrier\n\n","user":"anonymous","dateUpdated":"2017-11-22T11:58:03-0800","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{},"enabled":true,"editorSetting":{"language":"sql","editOnDblClick":false},"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\tmax(arrdelay)\nUA\t1090.0\nAA\t663.0\nDL\t1158.0\nWN\t350.0\n"}]},"apps":[],"jobName":"paragraph_1511373065165_760890767","id":"20171110-195759_439800395","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T11:58:03-0800","dateFinished":"2017-11-22T11:58:06-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19820"},{"title":"Count number flights delayed","text":"import org.apache.spark.ml.feature.Binarizer\nimport org.apache.spark.ml.feature.Bucketizer\nval labeler = new Binarizer().setInputCol(\"depdelay\").setOutputCol(\"label\").setThreshold(15.0);\nval df2= labeler.transform(df)\nval mlabeler = new Bucketizer().setInputCol(\"depdelay\").setOutputCol(\"mlabel\").setSplits(Array( 0.0, 15.0,30.0,  Double.PositiveInfinity))\ndf2.groupBy(\"label\").count.show\nval df3= mlabeler.transform(df)\ndf3.groupBy(\"mlabel\").count.show\ndf2.createOrReplaceTempView(\"flightd\")\n","user":"anonymous","dateUpdated":"2017-11-22T18:04:03-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.ml.feature.Binarizer\n\nimport org.apache.spark.ml.feature.Bucketizer\n\nlabeler: org.apache.spark.ml.feature.Binarizer = binarizer_541ead665450\n\ndf2: org.apache.spark.sql.DataFrame = [dofM: int, dofW: int ... 13 more fields]\n\nmlabeler: org.apache.spark.ml.feature.Bucketizer = bucketizer_b580a5fbe647\n+-----+-----+\n|label|count|\n+-----+-----+\n|  0.0|16906|\n|  1.0| 4758|\n+-----+-----+\n\n\ndf3: org.apache.spark.sql.DataFrame = [dofM: int, dofW: int ... 13 more fields]\n+------+-----+\n|mlabel|count|\n+------+-----+\n|   0.0|16731|\n|   1.0| 1671|\n|   2.0| 3262|\n+------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1511373065166_762045013","id":"20170524-093402_1430077788","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T18:04:03-0800","dateFinished":"2017-11-22T18:04:21-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19821"},{"title":"Explore Average statistics grouped by churn","text":"z.show(df2.groupBy(\"label\").avg())","user":"anonymous","dateUpdated":"2017-11-22T12:02:00-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":true,"setting":{"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"mlabel","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"avg(depdelay)","index":4,"aggr":"sum"},{"name":"avg(arrdelay)","index":6,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"label\tavg(dofM)\tavg(dofW)\tavg(crsdephour)\tavg(crsdeptime)\tavg(depdelay)\tavg(crsarrtime)\tavg(arrdelay)\tavg(crselapsedtime)\tavg(dist)\tavg(label)\n0.0\t16.582751685792026\t3.779309121022122\t12.485448953034426\t1257.6758547261327\t1.6992192121140424\t1491.1820063882644\t3.048740092274932\t185.337454158287\t1101.2136519578848\t0.0\n1.0\t13.851197982345523\t3.6958806221101304\t14.536359815048339\t1464.1679277007147\t70.88944934846575\t1694.7908785203867\t65.28520386717108\t190.43799915931064\t1160.4136191677176\t1.0\n"}]},"apps":[],"jobName":"paragraph_1511373065167_761660264","id":"20170524-102007_926152177","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T12:02:00-0800","dateFinished":"2017-11-22T12:02:04-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19822"},{"title":"Explore average number customer service calls grouped by churn","text":"%sql\nSELECT carrier, avg(depdelay) as avgdelay\nFROM flights \nGROUP BY carrier\nORDER BY avgdelay desc","user":"anonymous","dateUpdated":"2017-11-22T12:02:17-0800","config":{"editorSetting":{"language":"sql"},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"carrier","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"avgdelay","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\tavgdelay\nDL\t19.144142419601838\nUA\t18.908578899728454\nWN\t15.96870109546166\nAA\t11.035447403717187\n"}]},"apps":[],"jobName":"paragraph_1511373065169_771663736","id":"20170524-095127_757444423","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T12:02:17-0800","dateFinished":"2017-11-22T12:02:19-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19823"},{"text":"%sql\nSELECT label, count(label),crsdephour\nFROM flightd \nGROUP BY crsdephour, label\norder by label\n\n","user":"anonymous","dateUpdated":"2017-11-22T12:03:16-0800","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"crsdephour","index":2,"aggr":"sum"}],"groups":[{"name":"label","index":0,"aggr":"sum"}],"values":[{"name":"count(label)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"label\tcount(label)\tcrsdephour\n0.0\t831\t18\n0.0\t26\t1\n0.0\t1134\t11\n0.0\t226\t22\n0.0\t913\t12\n0.0\t1229\t10\n0.0\t592\t20\n0.0\t972\t14\n0.0\t1085\t13\n0.0\t1269\t8\n0.0\t404\t21\n0.0\t1652\t7\n0.0\t1155\t6\n0.0\t67\t23\n0.0\t86\t24\n0.0\t1065\t9\n0.0\t31\t0\n0.0\t911\t16\n0.0\t722\t19\n0.0\t323\t5\n0.0\t1213\t17\n0.0\t1000\t15\n1.0\t207\t9\n1.0\t234\t20\n1.0\t280\t12\n1.0\t33\t23\n1.0\t491\t17\n1.0\t384\t19\n1.0\t288\t11\n1.0\t137\t7\n1.0\t11\t0\n1.0\t12\t24\n1.0\t19\t5\n1.0\t400\t18\n1.0\t343\t14\n1.0\t204\t8\n1.0\t182\t21\n1.0\t394\t16\n1.0\t81\t6\n1.0\t335\t15\n1.0\t364\t13\n1.0\t66\t22\n1.0\t4\t1\n1.0\t289\t10\n"}]},"apps":[],"jobName":"paragraph_1511373065170_772817983","id":"20171118-141534_1057100150","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T12:03:16-0800","dateFinished":"2017-11-22T12:03:18-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19824"},{"text":"%sql\nSELECT label, count(label),dofW\nFROM flightd \nGROUP BY dofW, label\norder by label","user":"anonymous","dateUpdated":"2017-11-22T18:10:29-0800","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"dofW","index":2,"aggr":"sum"}],"groups":[{"name":"label","index":0,"aggr":"sum"}],"values":[{"name":"count(label)","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"label\tcount(label)\tdofW\n0.0\t2826\t1\n0.0\t2456\t4\n0.0\t2430\t7\n0.0\t2404\t3\n0.0\t1477\t6\n0.0\t2802\t2\n0.0\t2511\t5\n1.0\t830\t2\n1.0\t617\t4\n1.0\t530\t5\n1.0\t491\t3\n1.0\t1044\t1\n1.0\t814\t7\n1.0\t432\t6\n"}]},"apps":[],"jobName":"paragraph_1511402690247_-1528108785","id":"20171122-180450_1221277559","dateCreated":"2017-11-22T18:04:50-0800","dateStarted":"2017-11-22T18:07:25-0800","dateFinished":"2017-11-22T18:07:28-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19825"},{"title":"Explore Average statistics grouped by churn","text":"%sql\nSELECT label, count(label),carrier\nFROM flightd \nGROUP BY carrier, label\norder by carrier\n","user":"anonymous","dateUpdated":"2017-11-22T12:03:40-0800","config":{"editorSetting":{"language":"sql"},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"stacked":false}},"commonSetting":{},"keys":[{"name":"carrier","index":2,"aggr":"sum"}],"groups":[{"name":"label","index":0,"aggr":"sum"}],"values":[{"name":"count(label)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"label\tcount(label)\tcarrier\n0.0\t4363\tAA\n1.0\t856\tAA\n0.0\t4076\tDL\n1.0\t1148\tDL\n0.0\t7522\tUA\n1.0\t2421\tUA\n1.0\t333\tWN\n0.0\t945\tWN\n"}]},"apps":[],"jobName":"paragraph_1511373065172_770509489","id":"20170524-144751_554129160","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T12:03:40-0800","dateFinished":"2017-11-22T12:03:42-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19826"},{"text":"%sql\nSELECT label, count(label),origin\nFROM flightd \nGROUP BY origin, label\norder by label\n","user":"anonymous","dateUpdated":"2017-11-22T12:03:59-0800","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"pieChart":{},"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"origin","index":2,"aggr":"sum"}],"groups":[{"name":"label","index":0,"aggr":"sum"}],"values":[{"name":"count(label)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"label\tcount(label)\torigin\n0.0\t1684\tDEN\n0.0\t1641\tBOS\n0.0\t1435\tIAH\n0.0\t2561\tORD\n0.0\t2199\tLGA\n0.0\t1682\tEWR\n0.0\t1848\tMIA\n0.0\t2371\tATL\n0.0\t1485\tSFO\n1.0\t416\tLGA\n1.0\t472\tMIA\n1.0\t565\tEWR\n1.0\t295\tBOS\n1.0\t490\tIAH\n1.0\t515\tSFO\n1.0\t706\tATL\n1.0\t749\tORD\n1.0\t550\tDEN\n"}]},"apps":[],"jobName":"paragraph_1511373065174_771278987","id":"20171110-211045_792848918","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T12:03:59-0800","dateFinished":"2017-11-22T12:04:01-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19827"},{"text":"%sql\nSELECT label, count(label) as count ,dest\nFROM flightd where \nGROUP BY dest, label\norder by count desc\n","user":"anonymous","dateUpdated":"2017-11-22T12:05:38-0800","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"dest","index":2,"aggr":"sum"}],"groups":[{"name":"label","index":0,"aggr":"sum"}],"values":[{"name":"count","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"label\tcount\tdest\n0.0\t2632\tORD\n0.0\t2440\tATL\n0.0\t2015\tLGA\n0.0\t1897\tMIA\n0.0\t1755\tDEN\n0.0\t1627\tEWR\n0.0\t1573\tIAH\n0.0\t1570\tBOS\n0.0\t1397\tSFO\n1.0\t654\tATL\n1.0\t626\tORD\n1.0\t612\tEWR\n1.0\t607\tSFO\n1.0\t593\tLGA\n1.0\t444\tDEN\n1.0\t442\tMIA\n1.0\t395\tIAH\n1.0\t385\tBOS\n"}]},"apps":[],"jobName":"paragraph_1511373065176_768970494","id":"20171110-211325_1276970713","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T12:05:01-0800","dateFinished":"2017-11-22T12:05:02-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19828"},{"text":"%sql\nSELECT label, count(label) as count ,origin\nFROM flightd where label='1.0'\nGROUP BY origin, label\norder by count desc\n","user":"anonymous","dateUpdated":"2017-11-22T12:07:35-0800","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"pieChart":{}},"commonSetting":{},"keys":[{"name":"origin","index":2,"aggr":"sum"}],"groups":[],"values":[{"name":"count","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"label\tcount\torigin\n1.0\t749\tORD\n1.0\t706\tATL\n1.0\t565\tEWR\n1.0\t550\tDEN\n1.0\t515\tSFO\n1.0\t490\tIAH\n1.0\t472\tMIA\n1.0\t416\tLGA\n1.0\t295\tBOS\n"}]},"apps":[],"jobName":"paragraph_1511373065177_768585745","id":"20171110-211530_880051230","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T12:07:03-0800","dateFinished":"2017-11-22T12:07:05-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19829"},{"text":"%md\nIn order for the features to be used by a machine learning algorithm, they are transformed into numbers representing the value for each feature\n","dateUpdated":"2017-11-22T09:51:05-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>In order for the features to be used by a machine learning algorithm, they are transformed into numbers representing the value for each feature</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511373065179_769355242","id":"20170603-184811_78732818","dateCreated":"2017-11-22T09:51:05-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:19830"},{"text":"val indexer=    new StringIndexer()\n        .setInputCol(\"dofM\")\n        .setOutputCol(\"dofM\" + \"Indexed\")\n\nval indexed = indexer.fit(df).transform(df)\n//indexed.select(\"dofMIndexed\").show()\nindexed.select(indexed(\"dofMIndexed\")).distinct.show()\n","dateUpdated":"2017-11-22T09:51:05-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nindexer: org.apache.spark.ml.feature.StringIndexer = strIdx_a30b490e5781\n\nindexed: org.apache.spark.sql.DataFrame = [dofM: int, dofW: int ... 13 more fields]\n+-----------+\n|dofMIndexed|\n+-----------+\n|        8.0|\n|        0.0|\n|        7.0|\n|       29.0|\n|       18.0|\n|        1.0|\n|       25.0|\n|        4.0|\n|       23.0|\n|       11.0|\n|       21.0|\n|       14.0|\n|       22.0|\n|       19.0|\n|        3.0|\n|       28.0|\n|        2.0|\n|       17.0|\n|       27.0|\n|       10.0|\n+-----------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1511373065181_767046749","id":"20171122-082652_1522316747","dateCreated":"2017-11-22T09:51:05-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:19831"},{"title":"Map Categorical columns to Numbers","text":"\nval categoricalColumns = Array( \"dofW\" ,\"crsdephour\", \"carrier\", \"origin\", \"dest\")\n\nval stringIndexers = categoricalColumns.map { colName =>\n      new StringIndexer()\n        .setInputCol(colName)\n        .setOutputCol(colName + \"Indexed\")\n        .fit(df.union(test))\n}\nval encoders = categoricalColumns.map { colName =>\n      new OneHotEncoder()\n        .setInputCol(colName+\"Indexed\")\n        .setOutputCol(colName + \"Enc\")\n}\n\n\n","user":"anonymous","dateUpdated":"2017-11-22T18:15:27-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ncategoricalColumns: Array[String] = Array(dofW, crsdephour, carrier, origin, dest)\n\nstringIndexers: Array[org.apache.spark.ml.feature.StringIndexerModel] = Array(strIdx_2a594c0c58da, strIdx_7674e971e552, strIdx_f6005dbae2d4, strIdx_7a2feefc6b7a, strIdx_7edce440a98c)\n\nencoders: Array[org.apache.spark.ml.feature.OneHotEncoder] = Array(oneHot_53f6dadae2a4, oneHot_3302b7ddb76d, oneHot_c20ffd188901, oneHot_0d71c81cc58d, oneHot_c4d630715eb8)\n"}]},"apps":[],"jobName":"paragraph_1511373065185_753195789","id":"20170508-150543_958647761","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T18:15:27-0800","dateFinished":"2017-11-22T18:15:33-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19832"},{"title":"Use VectorAssembler, a transformer,  to put features into a feature vector column","text":"//valfeatureCols = Array(\"dofM\", \"dofW\", \"carrierIndexed\", \"destIndexed\", \"originIndexed\", \"crsdeptime\",\"crsarrtime\",\"crselapsedtime\",\"dist\")\n//\"dofMEnc\",\nval featureCols = Array( \"dofWEnc\", \"carrierEnc\", \"destEnc\", \"originEnc\", \"crsdephourEnc\",\"crselapsedtime\", \"dist\")\n\n\nval assembler = new VectorAssembler().setInputCols(featureCols).setOutputCol(\"features\")\n\n//val featureIndexer = new VectorIndexer().setInputCol(\"vfeatures\").setOutputCol(\"features\").setMaxCategories(32)\n\nval labeler = new Binarizer().setInputCol(\"depdelay\").setOutputCol(\"label\").setThreshold(15.0);\n//    val labeler = new Bucketizer().setInputCol(\"arrdelay\").setOutputCol(\"label\").setSplits(Array(Double.NegativeInfinity, 0.0, 15.0, Double//.PositiveInfinity))\n","user":"anonymous","dateUpdated":"2017-11-22T18:15:49-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nfeatureCols: Array[String] = Array(dofWEnc, carrierEnc, destEnc, originEnc, crsdephourEnc, crselapsedtime, dist)\n\nassembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_dc222fc227b8\n\nlabeler: org.apache.spark.ml.feature.Binarizer = binarizer_90c0c01e92b6\n"}]},"apps":[],"jobName":"paragraph_1511373065189_751656793","id":"20170524-223310_2121058884","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T18:15:49-0800","dateFinished":"2017-11-22T18:15:51-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19833"},{"title":"Create Decision Tree Estimator , set Label and Feature Columns ","text":"val dTree = new DecisionTreeClassifier().setLabelCol(\"label\").setFeaturesCol(\"features\").setMaxBins(7000)      ","user":"anonymous","dateUpdated":"2017-11-22T18:15:59-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndTree: org.apache.spark.ml.classification.DecisionTreeClassifier = dtc_45932c48036f\n"}]},"apps":[],"jobName":"paragraph_1511373065191_752426291","id":"20170603-185445_276463997","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T18:15:59-0800","dateFinished":"2017-11-22T18:16:00-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19834"},{"text":"%md\nSet up a pipeline to pass the data through transformers to extract the features and label and pass this to a decision tree estimator to fit the model \n\n","dateUpdated":"2017-11-22T09:51:05-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Set up a pipeline to pass the data through transformers to extract the features and label and pass this to a decision tree estimator to fit the model</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511373065192_750502546","id":"20170601-154525_1033166149","dateCreated":"2017-11-22T09:51:05-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:19835"},{"title":"Set up pipeline with  feature transformers and model estimator","text":"\nval steps = stringIndexers ++ encoders  ++  Array(labeler, assembler,  dTree)\n\nval pipeline = new Pipeline().setStages(steps)\n","user":"anonymous","dateUpdated":"2017-11-22T18:16:05-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nsteps: Array[org.apache.spark.ml.PipelineStage with org.apache.spark.ml.util.MLWritable{def copy(extra: org.apache.spark.ml.param.ParamMap): org.apache.spark.ml.PipelineStage with org.apache.spark.ml.util.MLWritable{def copy(extra: org.apache.spark.ml.param.ParamMap): org.apache.spark.ml.PipelineStage with org.apache.spark.ml.util.MLWritable}}] = Array(strIdx_2a594c0c58da, strIdx_7674e971e552, strIdx_f6005dbae2d4, strIdx_7a2feefc6b7a, strIdx_7edce440a98c, oneHot_53f6dadae2a4, oneHot_3302b7ddb76d, oneHot_c20ffd188901, oneHot_0d71c81cc58d, oneHot_c4d630715eb8, binarizer_90c0c01e92b6, vecAssembler_dc222fc227b8, dtc_45932c48036f)\n\npipeline: org.apache.spark.ml.Pipeline = pipeline_78e452b93821\n"}]},"apps":[],"jobName":"paragraph_1511373065194_751272044","id":"20170508-151557_1422077156","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T18:16:06-0800","dateFinished":"2017-11-22T18:16:07-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19836"},{"text":"%md\r\nSpark ML supports k-fold cross validation with a transformation/estimation pipeline to try out different combinations of parameters, using a process called grid search. You set up a CrossValidator with the parameters to test, an estimator and evaluator for a model selection workflow.\r\n","dateUpdated":"2017-11-22T09:51:05-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Spark ML supports k-fold cross validation with a transformation/estimation pipeline to try out different combinations of parameters, using a process called grid search. You set up a CrossValidator with the parameters to test, an estimator and evaluator for a model selection workflow.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511373065195_750887295","id":"20170531-154658_1298817002","dateCreated":"2017-11-22T09:51:05-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:19837"},{"title":"set up a CrossValidator with the parameters to test, an estimator and evaluator for a model selection","text":"// set param grid to Search through decision tree's maxDepth parameter for best model\n// Deeper trees are potentially more accurate, but are also more likely to overfit.\n val paramGrid = new ParamGridBuilder().addGrid(dTree.maxDepth, Array( 4, 5, 6)).build()\n\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\nval evaluator = new MulticlassClassificationEvaluator()\n   .setLabelCol(\"label\").setPredictionCol(\"prediction\").setMetricName(\"accuracy\")\n\n//val evaluator = new BinaryClassificationEvaluator()\n//    .setLabelCol(\"label\").setRawPredictionCol(\"rawPrediction\")\n     \n\n// Set up 3-fold cross validation with paramGrid\n val crossval = new CrossValidator().setEstimator(pipeline)\n      .setEvaluator(evaluator)\n      .setEstimatorParamMaps(paramGrid).setNumFolds(3)","user":"anonymous","dateUpdated":"2017-11-22T18:16:20-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\n\n\n\n\n\n\n\nparamGrid: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\tdtc_45932c48036f-maxDepth: 4\n}, {\n\tdtc_45932c48036f-maxDepth: 5\n}, {\n\tdtc_45932c48036f-maxDepth: 6\n})\n\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\n\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\n\nevaluator: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_8167647a3d6a\n\ncrossval: org.apache.spark.ml.tuning.CrossValidator = cv_7619ee4c9761\n"}]},"apps":[],"jobName":"paragraph_1511373065196_748963551","id":"20170508-151903_1365343172","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T18:16:20-0800","dateFinished":"2017-11-22T18:16:23-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19838"},{"title":"Fit the model to the input data using K-fold cross validation","text":"val Array(train, test1) = df.randomSplit(Array(0.75, 0.25))\nval cvModel = crossval.fit(df)","user":"anonymous","dateUpdated":"2017-11-22T18:16:27-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\n\ntrain: org.apache.spark.sql.Dataset[Flight] = [dofM: int, dofW: int ... 12 more fields]\ntest1: org.apache.spark.sql.Dataset[Flight] = [dofM: int, dofW: int ... 12 more fields]\n\ncvModel: org.apache.spark.ml.tuning.CrossValidatorModel = cv_7619ee4c9761\n"}]},"apps":[],"jobName":"paragraph_1511373065197_748578802","id":"20170508-151926_10766097","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T18:16:27-0800","dateFinished":"2017-11-22T18:16:56-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19839"},{"title":"Display the Best model ","text":"val bestModel = cvModel.bestModel\nprintln(\"The Best Model:\\n--------------------\")\nval treeModel = bestModel.asInstanceOf[org.apache.spark.ml.PipelineModel].stages(12).asInstanceOf[DecisionTreeClassificationModel]\n//println(\"Learned classification tree model:\\n\" + treeModel.toDebugString)\n","user":"anonymous","dateUpdated":"2017-11-22T18:31:02-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"\nbestModel: org.apache.spark.ml.Model[_] = pipeline_78e452b93821\nThe Best Model:\n--------------------\n\ntreeModel: org.apache.spark.ml.classification.DecisionTreeClassificationModel = DecisionTreeClassificationModel (uid=dtc_45932c48036f) of depth 4 with 27 nodes\n\n\n\n<console>:106: error: value foreach is not a member of org.apache.spark.ml.classification.DecisionTreeClassificationModel\n       treeModel.foreach(_.toDebugString)\n                 ^\n"}]},"apps":[],"jobName":"paragraph_1511373065198_749733049","id":"20170508-151947_197896730","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T18:30:27-0800","dateFinished":"2017-11-22T18:30:31-0800","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:19840"},{"title":"fields Customer service calls and Total day minutes have high predictive power to determine a customer's likeliness to churn","text":"////0-11 feature columns: len, iplanIndex, numvmail, tdmins, tdcalls, temins, tecalls, tnmins, tncalls, timins, ticalls, numcs\rprintln( \"Feature 11: \" +  featureCols(11) +  \" Feature 3: \" +  featureCols(3))\r","dateUpdated":"2017-11-22T09:51:05-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Feature 11: numcs Feature 3: tdmins\n"}]},"apps":[],"jobName":"paragraph_1511373065200_759736520","id":"20170524-231226_52953518","dateCreated":"2017-11-22T09:51:05-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:19841"},{"text":"%md\r\nThe actual performance of the model can be determined using the test data set which has not been used for any training or cross-validation activities. We'll transform the test set with the model pipeline, which will map the features according to the same recipe. \r\n","dateUpdated":"2017-11-22T09:51:05-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>The actual performance of the model can be determined using the test data set which has not been used for any training or cross-validation activities. We&rsquo;ll transform the test set with the model pipeline, which will map the features according to the same recipe.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511373065201_759351771","id":"20170602-155317_1487132664","dateCreated":"2017-11-22T09:51:05-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:19842"},{"title":"Get Predictions from Test set and Evaluate","text":"//transform the test set with the model pipeline, which will map the features according to the same recipe\nval predictions = cvModel.transform(test)\n","user":"anonymous","dateUpdated":"2017-11-22T18:21:56-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\npredictions: org.apache.spark.sql.DataFrame = [dofM: int, dofW: int ... 27 more fields]\n"}]},"apps":[],"jobName":"paragraph_1511373065203_760121269","id":"20170508-155848_1997894070","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T18:21:56-0800","dateFinished":"2017-11-22T18:21:57-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19843"},{"text":"val  temp = predictions.select(\"features\")\n\ntemp.take(1)\n//predictions.show","user":"anonymous","dateUpdated":"2017-11-22T18:23:46-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ntemp: org.apache.spark.sql.DataFrame = [features: vector]\n\nres91: Array[org.apache.spark.sql.Row] = Array([(49,[5,18,34,47,48],[1.0,1.0,1.0,145.0,946.0])])\n"}]},"apps":[],"jobName":"paragraph_1511373065204_758197524","id":"20170602-160222_471240064","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T18:23:46-0800","dateFinished":"2017-11-22T18:23:48-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19844"},{"text":"%md\nAccuracy is measured by the area under the ROC curve. The area measures the ability of the test to correctly classify true positives from false positives. A random predictor would have .5 accuracy. The closer the value is to 1 the better its predictions are. \n\nIn this case, the evaluation returns 84.8% precision. ","dateUpdated":"2017-11-22T09:51:05-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Accuracy is measured by the area under the ROC curve. The area measures the ability of the test to correctly classify true positives from false positives. A random predictor would have .5 accuracy. The closer the value is to 1 the better its predictions are. </p>\n<p>In this case, the evaluation returns 84.8% precision.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1511373065208_756658529","id":"20170602-161538_1648758337","dateCreated":"2017-11-22T09:51:05-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:19845"},{"text":"//The evaluator will provide us with the score of the predictions by comparing the prediction to the label\nval accuracy = evaluator.evaluate(predictions)\nevaluator.explainParams()","user":"anonymous","dateUpdated":"2017-11-22T18:15:03-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\naccuracy: Double = 0.826559642349116\n\n\n\n\nres57: String =\nlabelCol: label column name (default: label, current: label)\nmetricName: metric name in evaluation (f1|weightedPrecision|weightedRecall|accuracy) (default: f1, current: accuracy)\npredictionCol: prediction column name (default: prediction, current: prediction)\n"}]},"apps":[],"jobName":"paragraph_1511373065209_756273780","id":"20170602-155622_1453197792","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T18:15:03-0800","dateFinished":"2017-11-22T18:15:06-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19846"},{"title":"More metrics","text":"\nval lp = predictions.select(\"label\", \"prediction\")\nval counttotal = predictions.count()\nval correct = lp.filter($\"label\" === $\"prediction\").count()\nval wrong = lp.filter(not($\"label\" === $\"prediction\")).count()\nval ratioWrong = wrong.toDouble / counttotal.toDouble\nval ratioCorrect = correct.toDouble / counttotal.toDouble\nval truep = lp.filter($\"prediction\" === 0.0).filter($\"label\" === $\"prediction\").count() / counttotal.toDouble\nval truen = lp.filter($\"prediction\" === 1.0).filter($\"label\" === $\"prediction\").count() / counttotal.toDouble\nval falsep = lp.filter($\"prediction\" === 1.0).filter(not($\"label\" === $\"prediction\")).count() / counttotal.toDouble\nval falsen = lp.filter($\"prediction\" === 0.0).filter(not($\"label\" === $\"prediction\")).count() / counttotal.toDouble\nprintln(\"counttotal : \" + counttotal)\nprintln(\"correct : \" + correct)\nprintln(\"wrong: \" + wrong)\nprintln(\"ratio correct: \" + ratioCorrect)\nprintln(\"ratio true positive : \" + truep)\nprintln(\"ratio true negative : \" + truen)\nprintln(\"ratio wrong: \" + ratioWrong)\nprintln(\"ratio false positive : \" + falsep)\nprintln(\"ratio false negative : \" + falsen)\n","user":"anonymous","dateUpdated":"2017-11-22T11:31:25-0800","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nlp: org.apache.spark.sql.DataFrame = [label: double, prediction: double]\n\ncounttotal: Long = 19684\n\ncorrect: Long = 15871\n\nwrong: Long = 3813\n\nratioWrong: Double = 0.19371062792115423\n\nratioCorrect: Double = 0.8062893720788458\n\ntruep: Double = 0.7931822800243853\n\ntruen: Double = 0.013107092054460475\n\nfalsep: Double = 0.03337736232473074\n\nfalsen: Double = 0.1603332655964235\ncounttotal : 19684\ncorrect : 15871\nwrong: 3813\nratio correct: 0.8062893720788458\nratio true positive : 0.7931822800243853\nratio true negative : 0.013107092054460475\nratio wrong: 0.19371062792115423\nratio false positive : 0.03337736232473074\nratio false negative : 0.1603332655964235\n"}]},"apps":[],"jobName":"paragraph_1511373065212_755119533","id":"20170508-155935_1678385472","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T11:31:25-0800","dateFinished":"2017-11-22T11:31:46-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19847"},{"text":"cvModel.write.overwrite().save(\"/user/user01/data/cfModel\")","user":"anonymous","dateUpdated":"2017-11-22T11:31:47-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1511373065213_754734784","id":"20171107-112306_2124778398","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T11:31:47-0800","dateFinished":"2017-11-22T11:31:58-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19848"},{"text":"import org.apache.spark.ml.tuning.{CrossValidator, CrossValidatorModel, ParamGridBuilder}\nval sameCVModel = CrossValidatorModel.load(\"/user/user01/data/cfModel\")","user":"anonymous","dateUpdated":"2017-11-22T12:10:28-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.ml.tuning.{CrossValidator, CrossValidatorModel, ParamGridBuilder}\n\nsameCVModel: org.apache.spark.ml.tuning.CrossValidatorModel = cv_236012ea636e\n"}]},"apps":[],"jobName":"paragraph_1511373065215_755504282","id":"20171107-112400_500996456","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T12:10:28-0800","dateFinished":"2017-11-22T12:10:38-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19849"},{"text":"val bestModel = sameCVModel.bestModel\nprintln(\"The Best Model:\\n--------------------\")\nval treeModel = bestModel.asInstanceOf[org.apache.spark.ml.PipelineModel].stages(14).asInstanceOf[DecisionTreeClassificationModel]\nprintln(\"Learned classification tree model:\\n\" + treeModel.toDebugString)","user":"anonymous","dateUpdated":"2017-11-22T12:12:15-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nbestModel: org.apache.spark.ml.Model[_] = pipeline_7dcf0da4e99b\nThe Best Model:\n--------------------\n\ntreeModel: org.apache.spark.ml.classification.DecisionTreeClassificationModel = DecisionTreeClassificationModel (uid=dtc_01eaf110ab97) of depth 6 with 99 nodes\nLearned classification tree model:\nDecisionTreeClassificationModel (uid=dtc_01eaf110ab97) of depth 6 with 99 nodes\n  If (feature 27 in {1.0})\n   If (feature 37 in {1.0})\n    If (feature 77 <= 277.0)\n     If (feature 55 in {1.0})\n      If (feature 40 in {0.0})\n       If (feature 39 in {0.0})\n        Predict: 0.0\n       Else (feature 39 not in {0.0})\n        Predict: 1.0\n      Else (feature 40 not in {0.0})\n       Predict: 1.0\n     Else (feature 55 not in {1.0})\n      If (feature 76 in {1.0})\n       Predict: 0.0\n      Else (feature 76 not in {1.0})\n       If (feature 72 in {1.0})\n        Predict: 0.0\n       Else (feature 72 not in {1.0})\n        Predict: 1.0\n    Else (feature 77 > 277.0)\n     If (feature 64 in {1.0})\n      Predict: 0.0\n     Else (feature 64 not in {1.0})\n      If (feature 61 in {1.0})\n       Predict: 0.0\n      Else (feature 61 not in {1.0})\n       If (feature 65 in {1.0})\n        Predict: 0.0\n       Else (feature 65 not in {1.0})\n        Predict: 1.0\n   Else (feature 37 not in {1.0})\n    If (feature 55 in {1.0})\n     If (feature 42 in {1.0})\n      If (feature 78 <= 1096.0)\n       Predict: 1.0\n      Else (feature 78 > 1096.0)\n       Predict: 0.0\n     Else (feature 42 not in {1.0})\n      If (feature 48 in {1.0})\n       Predict: 1.0\n      Else (feature 48 not in {1.0})\n       If (feature 44 in {1.0})\n        Predict: 0.0\n       Else (feature 44 not in {1.0})\n        Predict: 0.0\n    Else (feature 55 not in {1.0})\n     If (feature 65 in {1.0})\n      If (feature 43 in {0.0})\n       If (feature 47 in {0.0})\n        Predict: 0.0\n       Else (feature 47 not in {0.0})\n        Predict: 0.0\n      Else (feature 43 not in {0.0})\n       Predict: 1.0\n     Else (feature 65 not in {1.0})\n      If (feature 45 in {1.0})\n       If (feature 54 in {1.0})\n        Predict: 0.0\n       Else (feature 54 not in {1.0})\n        Predict: 1.0\n      Else (feature 45 not in {1.0})\n       If (feature 44 in {1.0})\n        Predict: 1.0\n       Else (feature 44 not in {1.0})\n        Predict: 0.0\n  Else (feature 27 not in {1.0})\n   If (feature 18 in {1.0})\n    If (feature 45 in {1.0})\n     If (feature 58 in {1.0})\n      If (feature 51 in {0.0})\n       Predict: 0.0\n      Else (feature 51 not in {0.0})\n       Predict: 1.0\n     Else (feature 58 not in {1.0})\n      If (feature 55 in {1.0})\n       If (feature 50 in {0.0})\n        Predict: 0.0\n       Else (feature 50 not in {0.0})\n        Predict: 1.0\n      Else (feature 55 not in {1.0})\n       If (feature 65 in {1.0})\n        Predict: 0.0\n       Else (feature 65 not in {1.0})\n        Predict: 1.0\n    Else (feature 45 not in {1.0})\n     If (feature 38 in {1.0})\n      If (feature 52 in {1.0})\n       If (feature 55 in {1.0})\n        Predict: 0.0\n       Else (feature 55 not in {1.0})\n        Predict: 1.0\n      Else (feature 52 not in {1.0})\n       If (feature 70 in {1.0})\n        Predict: 0.0\n       Else (feature 70 not in {1.0})\n        Predict: 0.0\n     Else (feature 38 not in {1.0})\n      If (feature 55 in {1.0})\n       If (feature 49 in {1.0})\n        Predict: 1.0\n       Else (feature 49 not in {1.0})\n        Predict: 0.0\n      Else (feature 55 not in {1.0})\n       If (feature 52 in {1.0})\n        Predict: 1.0\n       Else (feature 52 not in {1.0})\n        Predict: 0.0\n   Else (feature 18 not in {1.0})\n    If (feature 55 in {1.0})\n     If (feature 77 <= 401.0)\n      If (feature 41 in {1.0})\n       If (feature 7 in {0.0})\n        Predict: 0.0\n       Else (feature 7 not in {0.0})\n        Predict: 0.0\n      Else (feature 41 not in {1.0})\n       If (feature 23 in {1.0})\n        Predict: 0.0\n       Else (feature 23 not in {1.0})\n        Predict: 0.0\n     Else (feature 77 > 401.0)\n      If (feature 12 in {1.0})\n       Predict: 0.0\n      Else (feature 12 not in {1.0})\n       Predict: 1.0\n    Else (feature 55 not in {1.0})\n     If (feature 65 in {1.0})\n      If (feature 16 in {1.0})\n       If (feature 53 in {1.0})\n        Predict: 0.0\n       Else (feature 53 not in {1.0})\n        Predict: 0.0\n      Else (feature 16 not in {1.0})\n       If (feature 23 in {1.0})\n        Predict: 0.0\n       Else (feature 23 not in {1.0})\n        Predict: 0.0\n     Else (feature 65 not in {1.0})\n      If (feature 4 in {1.0})\n       If (feature 38 in {1.0})\n        Predict: 0.0\n       Else (feature 38 not in {1.0})\n        Predict: 1.0\n      Else (feature 4 not in {1.0})\n       If (feature 23 in {1.0})\n        Predict: 0.0\n       Else (feature 23 not in {1.0})\n        Predict: 0.0\n\n"}]},"apps":[],"jobName":"paragraph_1511373065217_445396669","id":"20170508-160007_1145560554","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T12:12:15-0800","dateFinished":"2017-11-22T12:12:17-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19850"},{"text":"test.show","user":"anonymous","dateUpdated":"2017-11-22T12:15:14-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+\n|dofM|dofW|    fldate|carrier|flnum|origin|dest|crsdephour|crsdeptime|depdelay|crsarrtime|arrdelay|crselapsedtime|  dist|\n+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+\n|   1|   3|2017-02-01|     WN| 1421|   ATL| BOS|         9|       930|     0.0|      1155|     0.0|         145.0| 946.0|\n|   1|   3|2017-02-01|     WN| 4079|   ATL| BOS|        19|      1935|    20.0|      2215|     0.0|         160.0| 946.0|\n|   1|   3|2017-02-01|     WN| 4166|   ATL| BOS|        12|      1235|     0.0|      1505|     0.0|         150.0| 946.0|\n|   1|   3|2017-02-01|     WN|  139|   ATL| DEN|        10|      1035|     0.0|      1200|     0.0|         205.0|1199.0|\n|   1|   3|2017-02-01|     WN|  596|   ATL| DEN|        13|      1330|     0.0|      1450|     3.0|         200.0|1199.0|\n|   1|   3|2017-02-01|     WN| 1613|   ATL| DEN|         6|       610|     0.0|       735|     0.0|         205.0|1199.0|\n|   1|   3|2017-02-01|     WN| 4491|   ATL| DEN|        16|      1635|     0.0|      1800|     0.0|         205.0|1199.0|\n|   1|   3|2017-02-01|     WN|  302|   ATL| LGA|        17|      1735|     0.0|      1940|     0.0|         125.0| 762.0|\n|   1|   3|2017-02-01|     WN|  446|   ATL| LGA|         8|       835|     0.0|      1050|     0.0|         135.0| 762.0|\n|   1|   3|2017-02-01|     WN| 1144|   ATL| LGA|        13|      1250|     0.0|      1455|     0.0|         125.0| 762.0|\n|   1|   3|2017-02-01|     WN| 1437|   ATL| LGA|        21|      2055|     0.0|      2310|     0.0|         135.0| 762.0|\n|   1|   3|2017-02-01|     WN| 1602|   ATL| LGA|         6|       555|     0.0|       800|     0.0|         125.0| 762.0|\n|   1|   3|2017-02-01|     WN|  285|   BOS| ATL|        14|      1350|     0.0|      1650|     0.0|         180.0| 946.0|\n|   1|   3|2017-02-01|     WN|  331|   BOS| ATL|         9|       905|     0.0|      1210|     0.0|         185.0| 946.0|\n|   1|   3|2017-02-01|     WN|  335|   BOS| ATL|         6|       625|     0.0|       935|     3.0|         190.0| 946.0|\n|   1|   3|2017-02-01|     WN| 1832|   BOS| DEN|        17|      1745|     0.0|      2035|    49.0|         290.0|1754.0|\n|   1|   3|2017-02-01|     WN|  145|   DEN| ATL|         6|       630|     0.0|      1120|     0.0|         170.0|1199.0|\n|   1|   3|2017-02-01|     WN|  547|   DEN| ATL|        17|      1740|    34.0|      2225|    54.0|         165.0|1199.0|\n|   1|   3|2017-02-01|     WN|  559|   DEN| ATL|        10|      1005|     0.0|      1455|    22.0|         170.0|1199.0|\n|   1|   3|2017-02-01|     WN|  754|   DEN| BOS|        10|      1005|     9.0|      1555|    13.0|         230.0|1754.0|\n+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1511373065219_446166166","id":"20171107-112722_1762270725","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T12:15:14-0800","dateFinished":"2017-11-22T12:15:14-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19851"},{"text":"\n val predictions2 =  sameCVModel.transform(test)","user":"anonymous","dateUpdated":"2017-11-22T12:15:25-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\npredictions2: org.apache.spark.sql.DataFrame = [dofM: int, dofW: int ... 29 more fields]\n"}]},"apps":[],"jobName":"paragraph_1511373065221_443857673","id":"20171107-112846_1253092466","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T12:15:26-0800","dateFinished":"2017-11-22T12:15:26-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19852"},{"text":"predictions2.show","user":"anonymous","dateUpdated":"2017-11-22T12:15:39-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+-----------+-----------+-----------------+--------------+-------------+-----------+---------------+-------------+---------------+----------+-------------+-------------+-----+--------------------+----------------+--------------------+----------+\n|dofM|dofW|    fldate|carrier|flnum|origin|dest|crsdephour|crsdeptime|depdelay|crsarrtime|arrdelay|crselapsedtime|  dist|dofMIndexed|dofWIndexed|crsdephourIndexed|carrierIndexed|originIndexed|destIndexed|        dofMEnc|      dofWEnc|  crsdephourEnc|carrierEnc|    originEnc|      destEnc|label|            features|   rawPrediction|         probability|prediction|\n+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+-----------+-----------+-----------------+--------------+-------------+-----------+---------------+-------------+---------------+----------+-------------+-------------+-----+--------------------+----------------+--------------------+----------+\n|   1|   3|2017-02-01|     WN| 1421|   ATL| BOS|         9|       930|     0.0|      1155|     0.0|         145.0| 946.0|       12.0|        5.0|              9.0|           3.0|          1.0|        8.0|(30,[12],[1.0])|(6,[5],[1.0])| (22,[9],[1.0])| (3,[],[])|(8,[1],[1.0])|    (8,[],[])|  0.0|(79,[12,35,48,64,...|[12910.0,3491.0]|[0.78714712517529...|       0.0|\n|   1|   3|2017-02-01|     WN| 4079|   ATL| BOS|        19|      1935|    20.0|      2215|     0.0|         160.0| 946.0|       12.0|        5.0|             13.0|           3.0|          1.0|        8.0|(30,[12],[1.0])|(6,[5],[1.0])|(22,[13],[1.0])| (3,[],[])|(8,[1],[1.0])|    (8,[],[])|  1.0|(79,[12,35,48,68,...|[12910.0,3491.0]|[0.78714712517529...|       0.0|\n|   1|   3|2017-02-01|     WN| 4166|   ATL| BOS|        12|      1235|     0.0|      1505|     0.0|         150.0| 946.0|       12.0|        5.0|             12.0|           3.0|          1.0|        8.0|(30,[12],[1.0])|(6,[5],[1.0])|(22,[12],[1.0])| (3,[],[])|(8,[1],[1.0])|    (8,[],[])|  0.0|(79,[12,35,48,67,...|[12910.0,3491.0]|[0.78714712517529...|       0.0|\n|   1|   3|2017-02-01|     WN|  139|   ATL| DEN|        10|      1035|     0.0|      1200|     0.0|         205.0|1199.0|       12.0|        5.0|              2.0|           3.0|          1.0|        4.0|(30,[12],[1.0])|(6,[5],[1.0])| (22,[2],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[4],[1.0])|  0.0|(79,[12,35,43,48,...|[12910.0,3491.0]|[0.78714712517529...|       0.0|\n|   1|   3|2017-02-01|     WN|  596|   ATL| DEN|        13|      1330|     0.0|      1450|     3.0|         200.0|1199.0|       12.0|        5.0|              4.0|           3.0|          1.0|        4.0|(30,[12],[1.0])|(6,[5],[1.0])| (22,[4],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[4],[1.0])|  0.0|(79,[12,35,43,48,...|[12910.0,3491.0]|[0.78714712517529...|       0.0|\n|   1|   3|2017-02-01|     WN| 1613|   ATL| DEN|         6|       610|     0.0|       735|     0.0|         205.0|1199.0|       12.0|        5.0|             10.0|           3.0|          1.0|        4.0|(30,[12],[1.0])|(6,[5],[1.0])|(22,[10],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[4],[1.0])|  0.0|(79,[12,35,43,48,...|   [1040.0,55.0]|[0.94977168949771...|       0.0|\n|   1|   3|2017-02-01|     WN| 4491|   ATL| DEN|        16|      1635|     0.0|      1800|     0.0|         205.0|1199.0|       12.0|        5.0|              8.0|           3.0|          1.0|        4.0|(30,[12],[1.0])|(6,[5],[1.0])| (22,[8],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[4],[1.0])|  0.0|(79,[12,35,43,48,...|[12910.0,3491.0]|[0.78714712517529...|       0.0|\n|   1|   3|2017-02-01|     WN|  302|   ATL| LGA|        17|      1735|     0.0|      1940|     0.0|         125.0| 762.0|       12.0|        5.0|              1.0|           3.0|          1.0|        2.0|(30,[12],[1.0])|(6,[5],[1.0])| (22,[1],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[2],[1.0])|  0.0|(79,[12,35,41,48,...|[12910.0,3491.0]|[0.78714712517529...|       0.0|\n|   1|   3|2017-02-01|     WN|  446|   ATL| LGA|         8|       835|     0.0|      1050|     0.0|         135.0| 762.0|       12.0|        5.0|              3.0|           3.0|          1.0|        2.0|(30,[12],[1.0])|(6,[5],[1.0])| (22,[3],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[2],[1.0])|  0.0|(79,[12,35,41,48,...|[12910.0,3491.0]|[0.78714712517529...|       0.0|\n|   1|   3|2017-02-01|     WN| 1144|   ATL| LGA|        13|      1250|     0.0|      1455|     0.0|         125.0| 762.0|       12.0|        5.0|              4.0|           3.0|          1.0|        2.0|(30,[12],[1.0])|(6,[5],[1.0])| (22,[4],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[2],[1.0])|  0.0|(79,[12,35,41,48,...|[12910.0,3491.0]|[0.78714712517529...|       0.0|\n|   1|   3|2017-02-01|     WN| 1437|   ATL| LGA|        21|      2055|     0.0|      2310|     0.0|         135.0| 762.0|       12.0|        5.0|             15.0|           3.0|          1.0|        2.0|(30,[12],[1.0])|(6,[5],[1.0])|(22,[15],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[2],[1.0])|  0.0|(79,[12,35,41,48,...|[12910.0,3491.0]|[0.78714712517529...|       0.0|\n|   1|   3|2017-02-01|     WN| 1602|   ATL| LGA|         6|       555|     0.0|       800|     0.0|         125.0| 762.0|       12.0|        5.0|             10.0|           3.0|          1.0|        2.0|(30,[12],[1.0])|(6,[5],[1.0])|(22,[10],[1.0])| (3,[],[])|(8,[1],[1.0])|(8,[2],[1.0])|  0.0|(79,[12,35,41,48,...|   [1040.0,55.0]|[0.94977168949771...|       0.0|\n|   1|   3|2017-02-01|     WN|  285|   BOS| ATL|        14|      1350|     0.0|      1650|     0.0|         180.0| 946.0|       12.0|        5.0|              7.0|           3.0|          7.0|        1.0|(30,[12],[1.0])|(6,[5],[1.0])| (22,[7],[1.0])| (3,[],[])|(8,[7],[1.0])|(8,[1],[1.0])|  0.0|(79,[12,35,40,54,...|[12910.0,3491.0]|[0.78714712517529...|       0.0|\n|   1|   3|2017-02-01|     WN|  331|   BOS| ATL|         9|       905|     0.0|      1210|     0.0|         185.0| 946.0|       12.0|        5.0|              9.0|           3.0|          7.0|        1.0|(30,[12],[1.0])|(6,[5],[1.0])| (22,[9],[1.0])| (3,[],[])|(8,[7],[1.0])|(8,[1],[1.0])|  0.0|(79,[12,35,40,54,...|[12910.0,3491.0]|[0.78714712517529...|       0.0|\n|   1|   3|2017-02-01|     WN|  335|   BOS| ATL|         6|       625|     0.0|       935|     3.0|         190.0| 946.0|       12.0|        5.0|             10.0|           3.0|          7.0|        1.0|(30,[12],[1.0])|(6,[5],[1.0])|(22,[10],[1.0])| (3,[],[])|(8,[7],[1.0])|(8,[1],[1.0])|  0.0|(79,[12,35,40,54,...|   [1040.0,55.0]|[0.94977168949771...|       0.0|\n|   1|   3|2017-02-01|     WN| 1832|   BOS| DEN|        17|      1745|     0.0|      2035|    49.0|         290.0|1754.0|       12.0|        5.0|              1.0|           3.0|          7.0|        4.0|(30,[12],[1.0])|(6,[5],[1.0])| (22,[1],[1.0])| (3,[],[])|(8,[7],[1.0])|(8,[4],[1.0])|  0.0|(79,[12,35,43,54,...|[12910.0,3491.0]|[0.78714712517529...|       0.0|\n|   1|   3|2017-02-01|     WN|  145|   DEN| ATL|         6|       630|     0.0|      1120|     0.0|         170.0|1199.0|       12.0|        5.0|             10.0|           3.0|          4.0|        1.0|(30,[12],[1.0])|(6,[5],[1.0])|(22,[10],[1.0])| (3,[],[])|(8,[4],[1.0])|(8,[1],[1.0])|  0.0|(79,[12,35,40,51,...|   [1040.0,55.0]|[0.94977168949771...|       0.0|\n|   1|   3|2017-02-01|     WN|  547|   DEN| ATL|        17|      1740|    34.0|      2225|    54.0|         165.0|1199.0|       12.0|        5.0|              1.0|           3.0|          4.0|        1.0|(30,[12],[1.0])|(6,[5],[1.0])| (22,[1],[1.0])| (3,[],[])|(8,[4],[1.0])|(8,[1],[1.0])|  1.0|(79,[12,35,40,51,...|[12910.0,3491.0]|[0.78714712517529...|       0.0|\n|   1|   3|2017-02-01|     WN|  559|   DEN| ATL|        10|      1005|     0.0|      1455|    22.0|         170.0|1199.0|       12.0|        5.0|              2.0|           3.0|          4.0|        1.0|(30,[12],[1.0])|(6,[5],[1.0])| (22,[2],[1.0])| (3,[],[])|(8,[4],[1.0])|(8,[1],[1.0])|  0.0|(79,[12,35,40,51,...|[12910.0,3491.0]|[0.78714712517529...|       0.0|\n|   1|   3|2017-02-01|     WN|  754|   DEN| BOS|        10|      1005|     9.0|      1555|    13.0|         230.0|1754.0|       12.0|        5.0|              2.0|           3.0|          4.0|        8.0|(30,[12],[1.0])|(6,[5],[1.0])| (22,[2],[1.0])| (3,[],[])|(8,[4],[1.0])|    (8,[],[])|  0.0|(79,[12,35,51,57,...|[12910.0,3491.0]|[0.78714712517529...|       0.0|\n+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+-----------+-----------+-----------------+--------------+-------------+-----------+---------------+-------------+---------------+----------+-------------+-------------+-----+--------------------+----------------+--------------------+----------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1511373065223_444627171","id":"20171107-112947_525619195","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T12:15:39-0800","dateFinished":"2017-11-22T12:15:41-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19853"},{"text":"val accuracy2 = evaluator.evaluate(predictions2)\nevaluator.explainParams()","user":"anonymous","dateUpdated":"2017-11-22T12:15:50-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\naccuracy2: Double = 0.8062893720788458\n\n\n\n\nres116: String =\nlabelCol: label column name (default: label, current: label)\nmetricName: metric name in evaluation (f1|weightedPrecision|weightedRecall|accuracy) (default: f1, current: accuracy)\npredictionCol: prediction column name (default: prediction, current: prediction)\n"}]},"apps":[],"jobName":"paragraph_1511373065225_442318677","id":"20171107-113000_1427348134","dateCreated":"2017-11-22T09:51:05-0800","dateStarted":"2017-11-22T12:15:50-0800","dateFinished":"2017-11-22T12:15:53-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19854"},{"text":"test.show","dateUpdated":"2017-11-22T09:51:05-0800","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+\n|dofM|dofW|    fldate|carrier|flnum|origin|dest|crsdephour|crsdeptime|depdelay|crsarrtime|arrdelay|crselapsedtime|  dist|\n+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+\n|   1|   3|2017-02-01|     WN| 1421|   ATL| BOS|         9|       930|     0.0|      1155|     0.0|         145.0| 946.0|\n|   1|   3|2017-02-01|     WN| 4079|   ATL| BOS|        19|      1935|    20.0|      2215|     0.0|         160.0| 946.0|\n|   1|   3|2017-02-01|     WN| 4166|   ATL| BOS|        12|      1235|     0.0|      1505|     0.0|         150.0| 946.0|\n|   1|   3|2017-02-01|     WN|  139|   ATL| DEN|        10|      1035|     0.0|      1200|     0.0|         205.0|1199.0|\n|   1|   3|2017-02-01|     WN|  596|   ATL| DEN|        13|      1330|     0.0|      1450|     3.0|         200.0|1199.0|\n|   1|   3|2017-02-01|     WN| 1613|   ATL| DEN|         6|       610|     0.0|       735|     0.0|         205.0|1199.0|\n|   1|   3|2017-02-01|     WN| 4491|   ATL| DEN|        16|      1635|     0.0|      1800|     0.0|         205.0|1199.0|\n|   1|   3|2017-02-01|     WN|  302|   ATL| LGA|        17|      1735|     0.0|      1940|     0.0|         125.0| 762.0|\n|   1|   3|2017-02-01|     WN|  446|   ATL| LGA|         8|       835|     0.0|      1050|     0.0|         135.0| 762.0|\n|   1|   3|2017-02-01|     WN| 1144|   ATL| LGA|        13|      1250|     0.0|      1455|     0.0|         125.0| 762.0|\n|   1|   3|2017-02-01|     WN| 1437|   ATL| LGA|        21|      2055|     0.0|      2310|     0.0|         135.0| 762.0|\n|   1|   3|2017-02-01|     WN| 1602|   ATL| LGA|         6|       555|     0.0|       800|     0.0|         125.0| 762.0|\n|   1|   3|2017-02-01|     WN|  285|   BOS| ATL|        14|      1350|     0.0|      1650|     0.0|         180.0| 946.0|\n|   1|   3|2017-02-01|     WN|  331|   BOS| ATL|         9|       905|     0.0|      1210|     0.0|         185.0| 946.0|\n|   1|   3|2017-02-01|     WN|  335|   BOS| ATL|         6|       625|     0.0|       935|     3.0|         190.0| 946.0|\n|   1|   3|2017-02-01|     WN| 1832|   BOS| DEN|        17|      1745|     0.0|      2035|    49.0|         290.0|1754.0|\n|   1|   3|2017-02-01|     WN|  145|   DEN| ATL|         6|       630|     0.0|      1120|     0.0|         170.0|1199.0|\n|   1|   3|2017-02-01|     WN|  547|   DEN| ATL|        17|      1740|    34.0|      2225|    54.0|         165.0|1199.0|\n|   1|   3|2017-02-01|     WN|  559|   DEN| ATL|        10|      1005|     0.0|      1455|    22.0|         170.0|1199.0|\n|   1|   3|2017-02-01|     WN|  754|   DEN| BOS|        10|      1005|     9.0|      1555|    13.0|         230.0|1754.0|\n+----+----+----------+-------+-----+------+----+----------+----------+--------+----------+--------+--------------+------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1511373065227_443088175","id":"20171122-090737_1330310819","dateCreated":"2017-11-22T09:51:05-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:19855"},{"dateUpdated":"2017-11-22T09:51:05-0800","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511373065234_452706898","id":"20171122-091021_1615582434","dateCreated":"2017-11-22T09:51:05-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:19856"}],"name":"flightdelaysclassification","id":"2D12DYGQP","angularObjects":{"2CTHAGJ51:shared_process":[],"2CTFEJCW1:shared_process":[],"2CU928YA7:shared_process":[],"2CUSCHS1V:shared_process":[],"2CTGXT5AB:shared_process":[],"2CUHXVGRB:shared_process":[],"2CSNF42WC:shared_process":[],"2CU45S3XK:shared_process":[],"2CV35ABMV:shared_process":[],"2CUH4E5VP:shared_process":[],"2CVNXVD14:shared_process":[],"2CW8GSR5S:shared_process":[],"2CWBB1M88:shared_process":[],"2CT4ZSMCD:shared_process":[],"2CUQTDJZW:shared_process":[],"2CSMEVREU:shared_process":[],"2CVD5FM5C:shared_process":[],"2CTNB4WJK:shared_process":[],"2CUBZKAK6:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}